spring.application.name=hr-worker

# Without Eureka
#server.port=8001

# Eureka (class 03-03 forward)
#Eureka client
eureka.client.service-url.defaultZone=http://localhost:8080/eureka

#Deixando porta de hr-worker aleatoria
server.port=${PORT:0}
#Configurando nome no eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


# Configuration for config-server. Not on bootstrap anymore, 
# see application.properties of ms-config-server for article
# Putting this optional:configserver: it will lookup for http://localhost:8888
# Any different location should be especified after configserver: (ex: ...host:9004)

# Other Reference: https://spring.io/guides/gs/centralized-configuration/
#spring.config.import=optional:configserver:

# Setting to profile (xxx)
#spring.profiles.active=test

# Refresh Scope of configurations
# This one allows direct actuator/refresh over the port of service (ex: http://localhost:8001/actuator/refresh)
#management.endpoints.web.exposure.include=*

# Database configuration - cannot be moved to config server
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=

# acessible on http://localhost:9091/
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console